<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.jiangnx.community.dao.MessageMapper">
    <select id="selectConversationByUserId" resultType="Message">
        select id, from_id, to_id, conversation_id, content, status, create_time
        from message
        where id in (
            select max(id)
            from message
            where from_id != 1
              and status != 2
              and (from_id = #{userId} or to_id = #{userId})
            group by conversation_id
        )
        order by create_time desc
        limit #{offset},#{limit}

    </select>

    <select id="selectConversationCountByUserid" resultType="int">
        SELECT COUNT(m.mid)
        from (
                 select max(id) AS mid
                 from message
                 where from_id != 1
                   and status != 2
                   and (from_id = #{userId} or to_id = #{userId})
                 GROUP BY conversation_id
             ) AS m
    </select>

    <select id="selectLetterByConversationId" resultType="Message">
        SELECT id, from_id, to_id, conversation_id, content, status, create_time
        from message
        where status != 2
          and from_id !=1
          and conversation_id = #{conId}
        order by create_time desc
        limit #{offset},#{limit}

    </select>

    <select id="selectLetterCountByConversationId" resultType="int">
        SELECT count(id)
        from message
        where status != 2
          and from_id !=1
          and conversation_id = #{conId}
    </select>

    <select id="selectUnReadMessageCount" resultType="int">
        SELECT count(id) from message
        where status != 2
          and from_id !=1
          and status = 0
          AND to_id = #{userId}
         <if test="conId!=null">
             and conversation_id = #{conId}
         </if>
    </select>

    <select id="selectUnReadMessage" resultType="int">
        SELECT id from message
        where status != 2
        and from_id !=1
        and status = 0
        AND to_id = #{userId}
        <if test="conId!=null">
            and conversation_id = #{conId}
        </if>
    </select>

    <insert id="insertMessage" parameterType="Message">
        insert into message(from_id, to_id, conversation_id, content, status, create_time)
        values (#{fromId},#{toId},#{conversationId},#{content},#{status},#{createTime})
    </insert>

    <update id="updateStatus" parameterType="int">
        update message set status = 1
        where id in
        <foreach item="id" open="(" separator="," close=")" collection="list">
            #{id}
        </foreach>
    </update>


</mapper>